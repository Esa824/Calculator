#include "add.h"
#include "divide.h"
#include "multiply.h"
#include "subtract.h"
#include <cstdio>
#include <cstring>
#include <string>
void test_add(const char *number1, const char *number2,
              const char *expected_answer) {
  char result[128] = {0};
  add(number1, number2, result);
  printf("number1 : %s, result: %s number2 : %s expected_answer : %s, "
         "(%s)\n",
         number1, result, number2, expected_answer,
         strcmp(result, expected_answer) == 0 ? "correct" : "wrong");
}
void test_multiply(const char *number1, const char *number2,
                   const char *result2) {
  char answer[128] = {0};
  multiply(number1, number2, answer);
  printf("number1 %s number2 %s result %s result2 %s(%s)\n", number1, number2,
         answer, result2,
         strcmp(answer, result2) == 0 ? "it is correct" : "it is wrong");
}
void test_divide(const char *number1, const char *number2,
                 const char *expected_answer) {
  char result[128] = {0};
  divide(number1, number2, result);
  printf("number1 : %s, result: %s number2 : %s expected_answer : %s, "
         "(%s)\n",
         number1, result, number2, expected_answer,
         strcmp(result, expected_answer) == 0 ? "correct" : "wrong");
}
void test_subtract(const char *number1, const char *number2,
                   const char *expected_answer) {
  char result[128] = {0};
  subtract(number1, number2, result);
  printf("number1 : %s, result: %s number2 : %s expected_answer : %s, "
         "(%s)\n",
         number1, result, number2, expected_answer,
         strcmp(result, expected_answer) == 0 ? "correct" : "wrong");
}
int main() {
  test_add("-11", "-10", "-21");
  test_add(
      "10000000000000000000000000000",
      "1000000000000000000000000000000000000000000000000000000000000000000000",
      "1000000000000000000000000000000000000000010000000000000000000000000000");
  test_add("2", "-1000", "-998");
  test_add("11", "-10", "1");
  test_add("-10", "11", "1");
  test_add("-11", "10", "-1");
  test_add(
      "-11",
      "1000000000000000000000000000000000000000000000000000000000000000000"
      "00000",
      "99999999999999999999999999999999999999999999999999999999999999999999\
989");
  test_add(
      "-18998900888929482094801840328470984983240884000003942843204832428903284"
      "9038408904839248039840284444444444444444092840984301",
      "-888420084928402480913402840938240990",
      "-1899890088892948209480184032847098498324088400000394284320483242890\
32849038408904839248928260369372846925357846933779225291");
  test_add("1000", "1", "1001");
  test_add("9", "1", "10");
  test_add("-9", "-1", "-10");
  test_add("4839408209483444444444444444444444483092840328409238402384029384023"
           "8492384092384902384092",
           "-238209381938123801238329183019283093801",
           "4839408209483444444444444444444444483092840328409214581445835571643"
           "7254054909365619290291");
  test_add(
      "982039812039820381093810238019238091830100485833724839408209483444444444"
      "4444444444444830928403284092384023840293840238492384092384902384092",
      "-48982340984098340938409284093840923840932840932849038444445473597698281"
      "490893829038928398492498374827483799243777772488493840293844423843928402"
      "834989024930493248234802384093842093840938490384924888888888290488888888"
      "82034823048294823048234839483209488888880",
      "");
  test_add("-483940820938928310483444444444444444444444483092840328409238402384"
           "0293840238492384092384902384092",
           "403940234902238209381938123801238329183019283093801",
           "-483940820938928310483444444444444444444444483052446304919014581445"
           "8355716437254054909365619290291");
  test_add("-10", "2", "-8");
  test_add(
      "-48394082093892831048344444444444444444444448309284032840923840238402938"
      "40238492384092384902384092",
      "-40839482841984028492814928401284092840093940234902238209381938123801238"
      "329183019283093801",
      "-4839408250228765946818472937259372845728537671022343518994622233222\
231964039730713275404185477893");
  test_add(
      "-928489189248675991933447178393193384938420984983940284093840",
      "-12839213848390840841904893843574827489329218392183838239218384777798319"
      "238928310983190129038120380128309283418",
      "-1283921384839084084190489384357482748932921839218476672840763345379\
0252686106704176575067459105364068593377258");
  test_multiply("", "2847", "0");
  test_multiply(
      "-9909409312034203038383888888882018302130938018",
      "-28479402934902044209",
      "282214060644292528804232966701060943704665003735670569810874837762");
  test_multiply(
      "-9909409390482094023842012034203038383888888882018302130938018",
      "-284794402984092380888889423409283002934902044209",
      "28221443312873067395101020144962833111826950756631049477781812795287\
37310045493690797486366935369810874837762");
  test_multiply(
      "-99094093904888888888813890480398094323482209402384201203420303838388888"
      "8882018302130938018",
      "-2847944409328409283402830402984092380888889423409283002934902044209",
      "0");
  test_multiply(
      "990940939048884839028884088888881389048039809432348220940238420120342030"
      "38383888888882018302130938018",
      "-28479444093284092834028304029840923808888894234092594805289083002934902"
      "044209",
      "0");
  test_divide("130000000000000", "9", "14444444444444");
  test_divide("383838", "2847", "134");
  test_divide("9999999999999", "383838", "26052657");
  test_divide("2202929", "8598", "256");
  test_divide("229929202929", "89999598", "2554");
  test_divide("10381239", "89999598", "");
  test_divide("99999999999999999", "383838", "260526576316");
  test_divide("448281018998098939", "89999598", "4980922459");
  test_divide(
      "-9999999999999999999999999999999999999999999999999999999999999999",
      "-89999598", "111111607409624207432570976594806567913781126000140578405");
  test_divide("-99999894320849999999", "-89999598", "1111114899878");
  test_divide("-99950290199894320849999999", "-832092191899999598",
              "120119250");
  test_divide(
      "-9999999999999999999999999999999999999999999999999999999999999999",
      "89598", "-111609634143619277216009285921560749123864371972588673854327");
  test_divide("9999999999999", "-383838", "-26052657");
  test_divide("99999999981022221831093209999999999212931039199999999999",
              "-888888888383838",
              "-112500000042570502709167665262925978790883");
  test_divide(
      "999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999",
      "954939380912",
      "104718688954367507258541200154726497360376356462895857227962447425823247"
      "489960250973371996777727125400057186494024202");
  test_subtract("9429402394444443324", "954939380912", "9429401439505062412");
  test_subtract("-903213092139223092849021333309109429402394444443324",
                "94901301239154939380912",
                "-903213092139223092849021333404010730641549383824236");
  test_subtract(
      "-90321309213922309284902133330910942940299903091982131203394444443324",
      "94948908320190321090000123201301239154939380912",
      "-90321309213922309284997082239231133261389903215183432442549383824236");
  test_subtract(
      "999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999999999999999",
      "954939380912",
      "999999999999999999999999999999999999999999999999999999999999999999999999"
      "99999999999999999999999999999999999999999999045060619087");
  test_subtract(
      "948888888888888888888888888888888888888832222222222222444444488844444444"
      "4444444444444444444444444333920384-29402394444443324",
      "954939380912", "");
  test_subtract(
      "-98508092039023901239802983398402840398409283402834089028493284234802842"
      "94820480994328437897918239817390248023810004109909",
      "8928490832049830480324803284092384092384903284902954939380912",
      "-98508092039023901239802983398402840398409283402834089028493373519711163"
      "44650961319131721990302332202293532926764943490821");
  test_subtract(
      "-98451745801888884541578578130457938204983049814439052842908410284018402"
      "849184903888888812428491284938424899",
      "-801885890402483094802483204823948394828492840938954939380912",
      "-98451745801888884541578578130457938204983049813637166952505927189215919"
      "644360955494060319587552329999043987");
  test_subtract(
      "-94294023944444809384092834981388012938091283981209182390182309183190381"
      "443324",
      "382938103820138318231283912830182319381312308131239081113091283195493938"
      "0912",
      "-98123404982646192566405674109689836131904407062521573201313222015145320"
      "824236");
  test_subtract(
      "98483249832483948209482039480234884903840928309",
      "-484838438409384083248394884922489384444480224293092048309489038",
      "484838438409384181731644717406437593926519704527976952150417347");
}
